<launch>

  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="world" default="aspirator" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find p3dx_gazebo)/worlds/$(arg world).world" />
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="use_sim_time" value="$(arg use_sim_time)" />
		<arg name="headless" value="$(arg headless)" />
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(find gazebo_aspirator)/description/robot.urdf.xacro" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn 
                a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          respawn="false" output="screen" args="-urdf -model aspirator -param robot_description" />

  <rosparam file="$(find gazebo_aspirator)/description/diff_drive.yaml" command="load" />

  <node name="aspirator_controller" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="mobile_base_controller" />

  <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map /mobile_base/odom 100" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/joint_states" />
  </node>
  

</launch>